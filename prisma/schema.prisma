// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum DocumentType {
  PAN_CARD
  GST_CERTIFICATE
}

enum KYCStatus {
  PENDING
  APPROVED
  REJECTED
}

model User {
  id      String @id @default(uuid())
  clerkId String @unique

  firstName String?
  lastName  String?

  email String @unique

  kycRecord KYCRecord?
  store     Store?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model KYCRecord {
  id String @id @default(uuid())

  documentType DocumentType
  documentURL  String

  status KYCStatus

  userId String @unique
  user   User   @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Store {
  id   String @id @default(uuid())
  name String

  ownerID String @unique
  owner   User   @relation(fields: [ownerID], references: [id])

  account Account?

  products Product[]
  orders   Order[]
}

model Account {
  id String @id @default(uuid())

  balance Float

  beneficiary    String
  ifsc_code      String
  account_number BigInt
  branch         String
  bank_name      String

  storeID String @unique
  store   Store  @relation(fields: [storeID], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime?  @updatedAt
}

model Product {
  id String @id @default(uuid())

  name        String
  description String

  price    Float
  quantity Int

  image String

  barcode BigInt

  orderedUnits OrderProduct[]

  storeID String
  store   Store  @relation(fields: [storeID], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id               String @id @default(uuid())
  buyer            String
  delivery_address String

  storeID String
  store   Store  @relation(fields: [storeID], references: [id])

  products OrderProduct[]

  buyer_side_hook String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OrderProduct {
  id String @id @default(uuid())

  productID String
  product   Product @relation(fields: [productID], references: [id])

  quantity BigInt

  orderID String
  order   Order  @relation(fields: [orderID], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
